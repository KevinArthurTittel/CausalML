library(grf)
library(sandwich)
library(lmtest)
library(Hmisc)
library(ggplot2)
library(standardize)
library(foreign)
library(haven)
library(glmnet)
set.seed(123)
 
# Initialize parameters
  numtrees <- 2000 # Set to 1000 or 5000 to perform sensitivity analysis.
  index <- c(1:12) # Concerns 12 dependent variables; do not adjust.
  lambdas <- c(0, 0.1, 0.3, 0.5, 0.7, 1, 1.5) # Concerns ridge penalty parameters; do not adjust.
  boolean.lambdas <- FALSE # Set to TRUE to use lambdas instead of automatic penalty tuning.
  boolean.plot <- FALSE # Set to TRUE to make various plots of interest.
  results_ATE <- c()
  
# Estimation procedure
  for (i in index) {
    Y <- Grace_Period_Data[,(37+i)]
    Y <- as.vector(Y)
  
    ###########################
    ########### GRF ###########
    ###########################
    
      # Grow preliminary forests for (W, X) and (Y, X) separately
        forest.W <- regression_forest(X, W, num.trees = numtrees, honesty = TRUE, tune.parameters = "all")
        W.hat <- predict(forest.W)$predictions
        forest.Y <- regression_forest(X, Y, num.trees = numtrees, honesty = TRUE, tune.parameters = "all")
        Y.hat <- predict(forest.Y)$predictions

      # Compute the variable importance
        GRF.varimp <- variable_importance(forest.Y) 
    
      # Select variables to include using preliminary GRF
        prelim.GRF <- causal_forest(X, Y, W, Y.hat = Y.hat, W.hat = W.hat, num.trees = numtrees, honesty = TRUE)
        prelim.GRF.varimp <- variable_importance(prelim.GRF)
        selected.vars <- which(prelim.GRF.varimp / mean(prelim.GRF.varimp) > 0.2)

      # Implement GRF
        GRF <- causal_forest(X[,selected.vars], Y, W, Y.hat = Y.hat, W.hat = W.hat, num.trees = numtrees, 
                             honesty = TRUE, tune.parameters = "all")
                             
      # Compute ATE with corresponding 95% confidence intervals
        GRF.ATE <- average_treatment_effect(GRF, target.sample = "all")
        
    
    ############################
    #### Cluster-Robust GRF ####
    ############################
    
      # Select variables to include using preliminary Cluster-Robust GRF
        prelim.CR.GRF <- causal_forest(X, Y, W, Y.hat = Y.hat, W.hat = W.hat, honesty = TRUE, clusters = loangroups, num.trees = numtrees)
        prelim.CR.GRF.varimp <- variable_importance(prelim.CR.GRF)
        selected.vars <- which(prelim.CR.GRF.varimp / mean(prelim.CR.GRF.varimp) > 0.2)

      # Compute the variable importance
        CR.GRF.varimp <- variable_importance(forest.Y) 
              
      # Implement Cluster-Robust GRF
        CR.GRF <- causal_forest(X[,selected.vars], Y, W, Y.hat = Y.hat, W.hat = W.hat, clusters = loangroups, honesty = TRUE, num.trees = numtrees, 
                                tune.parameters = "all")
                                
      # Compute ATE 
        CR.GRF.ATE <- average_treatment_effect(CR.GRF, target.sample = "all")
          
    ############################
    ########### LLCF ###########
    ############################
    
       # Grow preliminary forests for (W, X) and (Y, X) separately
        forest.W <- ll_regression_forest(X, W, honesty = TRUE, enable.ll.split = TRUE, ll.split.weight.penalty = TRUE, 
                                         num.trees = numtrees)
        W.hat <- predict(forest.W)$predictions
        forest.Y <- ll_regression_forest(X, Y, honesty = TRUE, enable.ll.split = TRUE, ll.split.weight.penalty = TRUE, 
                                         num.trees = numtrees)
        Y.hat <- predict(forest.Y)$predictions
  
      # Compute the variable importance
        LLCF.varimp <- variable_importance(forest.Y) 
              
      # Select variables to include using Lasso feature selection
        lasso.mod <- cv.glmnet(X, Y, alpha = 1)
        selected <- which(coef(lasso.mod) != 0)
        if(length(selected) < 2) {
          selected <- 1:ncol(X)
        } else {
          selected <- selected[-1] - 1 # Remove intercept
        }
  
      # Implement LLCF
        LLCF <- causal_forest(X, Y, W, Y.hat = Y.hat, W.hat = W.hat, honesty = TRUE, num.trees = numtrees, 
                              tune.parameters = "all")
                              
      # Compute ATE                        
        LLCF.ATE <- average_treatment_effect(LLCF, target.sample = "all")
    
    ############################
    ###### Update results ######
    ############################
    
        results_ATE <- rbind(results_ATE, data.frame(t(c(paste(round(GRF.ATE[1], 3), "(", round(GRF.ATE[2], 3), ")"), 
                         paste(round(CR.GRF.ATE[1], 3), "(", round(CR.GRF.ATE[2], 3), ")"),
                         paste(round(LLCF.ATE[1], 3), "(", round(LLCF.ATE[2], 3), ")")))))
  }
  
  colnames(results_ATE) <- c("ATE GRF", "ATE CR.GRF", "ATE LLCF")    
  rownames(results_ATE) <- c("Total business spending", "Inventory and raw materials", "Business equipment",
                                        "Operating costs", "Total non-business spending", "Home repairs", "Utilities, taxes and rent",
                                        "Human capital", "Money for relending", "Savings", "Food and durable consumption", "New businesses")                                                             

write.csv(results[["results_ATE"]], file = "Table 1 (Field et al., 2013).xlsx")
